@{
    ViewData["Title"] = "Nueva Venta (Vue)";
}

<h2>Nueva Venta</h2>

<div id="app">
    <!-- Confirmaci√≥n de venta -->
    <div v-if="ventaConfirmada">
        <div class="alert alert-success">
            <h4 class="alert-heading">¬°Venta registrada exitosamente!</h4>
            <p>El n√∫mero de venta es <strong>#{{ ventaIdGenerada }}</strong>.</p>
            <hr>
            <button class="btn btn-primary" @@click="resetearFormulario">Hacer otra venta</button>
            <button class="btn btn-info ml-2" @@click="irADetalleVenta">Ver detalle de la venta</button>
        </div>
    </div>

    <!-- Formulario de venta -->
    <div v-else>
        <!-- Cliente -->
        <div class="form-group">
            <label><strong>Buscar Cliente</strong></label>
            <div class="input-group">
                <input type="text" class="form-control" v-model="clienteBusqueda" @@input="buscarClientes">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" @@click="abrirModalClientes">üëÅ Navegar Clientes</button>
                </div>
            </div>
            <ul class="list-group" v-if="clientes.length">
                <li class="list-group-item" v-for="c in clientes" @@click="seleccionarCliente(c)">
                    {{ c.nombreCompleto }}
                </li>
            </ul>
            <div v-if="clienteSeleccionado">
                <strong>Cliente Seleccionado:</strong> {{ clienteSeleccionado.nombreCompleto }}
            </div>
        </div>

        <!-- Rubro y producto -->
        <div class="row">
            <div class="col-md-6">
                <label><strong>Filtrar por Rubro</strong></label>
                <select class="form-control" v-model="rubroSeleccionado" @@change="filtrarProductosPorRubro">
                    <option disabled value="">-- Seleccione un rubro --</option>
                    <option v-for="r in rubros" :value="r.rubroId">{{ r.nombre }}</option>
                </select>
            </div>
            <div class="col-md-6">
                <label><strong>Buscar Producto</strong></label>
                <div class="input-group">
                    <input type="text" class="form-control" v-model="productoBusqueda" @@input="buscarProductos">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" @@click="abrirModalProductos">üëÅ Navegar Productos</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Productos -->
        <ul class="list-group mt-2"
            v-if="productos.length && productoBusqueda.length > 1 && !mostrarModalProductos">
            <li class="list-group-item d-flex justify-content-between align-items-center"
                v-for="p in productos" @@click="agregarProducto(p)">
                {{ p.nombre }} - ${{ p.precioVenta }} (Stock: {{ p.stock }})
                <button class="btn btn-sm btn-primary">Agregar</button>
            </li>
        </ul>

        <!-- ALERTA STOCK BAJO -->
        <div v-if="productosStockBajo.length" class="alert alert-warning mt-3">
            ‚ö†Ô∏è Atenci√≥n: Los siguientes productos tienen <strong>stock bajo</strong>:
            <ul>
                <li v-for="p in productosStockBajo" :key="p.productoId">
                    {{ p.nombre }} (Stock: {{ p.stock }})
                </li>
            </ul>
        </div>

        <!-- Carrito -->
        <div class="mt-4">
            <h4>Carrito</h4>

            <div class="form-group mt-3">
                <label><strong>Tipo de Venta</strong></label>
                <select class="form-control" v-model="tipoVenta">
                    <option disabled value="">-- Seleccione un tipo --</option>
                    <option value="Contado">Contado</option>
                    <option value="Tarjeta D√©bito">Tarjeta D√©bito</option>
                    <option value="Tarjeta Cr√©dito">Tarjeta Cr√©dito</option>
                    <option value="Transferencia">Transferencia</option>
                </select>
            </div>

            <table class="table table-bordered" v-if="carrito.length">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Precio Unitario</th>
                        <th>Cantidad</th>
                        <th>Subtotal</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(item, index) in carrito" :key="item.productoId">
                        <td>{{ item.nombre }}</td>
                        <td>${{ item.precioVenta.toFixed(2) }}</td>
                        <td>
                            <input type="number" class="form-control" v-model.number="item.cantidad" min="1" :max="item.stock" @@change="actualizarTotal">
                        </td>
                        <td>${{ (item.precioVenta * item.cantidad).toFixed(2) }}</td>
                        <td><button class="btn btn-danger btn-sm" @@click="quitarProducto(index)">Quitar</button></td>
                    </tr>
                </tbody>
            </table>

            <div v-if="carrito.length">
                <h4>Total: ${{ total.toFixed(2) }}</h4>
                <button class="btn btn-success" @@click="confirmarVenta">Confirmar Venta</button>
            </div>
        </div>
    </div>

    <!-- Modal de Productos -->
    <div class="modal fade" id="modalProductos" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Seleccionar Producto</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-center"
                            v-for="p in productos" @@click="agregarProducto(p)">
                            {{ p.nombre }} - ${{ p.precioVenta }} (Stock: {{ p.stock }})
                            <button class="btn btn-sm btn-success">Agregar</button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Clientes -->
    <div class="modal fade" id="modalClientes" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Seleccionar Cliente</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <ul class="list-group">
                        <li class="list-group-item" v-for="c in clientes" @@click="seleccionarClienteDesdeModal(c)">
                            {{ c.nombreCompleto }}
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        new Vue({
            el: '#app',
            data: {
                clienteBusqueda: '',
                clientes: [],
                clienteSeleccionado: null,
                productoBusqueda: '',
                productos: [],
                carrito: [],
                total: 0,
                tipoVenta: '',
                usuarioId: 1,
                rubros: [],
                rubroSeleccionado: '',
                ventaConfirmada: false,
                ventaIdGenerada: 0
            },
            computed: {
                productosStockBajo() {
                    return this.carrito.filter(p => p.stock < 10);
                }
            },
            created() {
                this.cargarRubros();
            },
            mounted() {
                document.addEventListener('click', this.handleClickOutside);
                document.addEventListener('keydown', this.handleEscape);
            },
            beforeDestroy() {
                document.removeEventListener('click', this.handleClickOutside);
                document.removeEventListener('keydown', this.handleEscape);
            },
            methods: {
                handleEscape(event) {
                    if (event.key === 'Escape') {
                        this.clienteBusqueda = '';
                        this.clientes = [];
                        this.productoBusqueda = '';
                        this.productos = [];
                    }
                },
                handleClickOutside(event) {
                    const clienteInput = this.$el.querySelector('input[v-model="clienteBusqueda"]');
                    const productoInput = this.$el.querySelector('input[v-model="productoBusqueda"]');

                    const clickedInsideCliente = clienteInput && (clienteInput === event.target || clienteInput.contains(event.target));
                    const clickedInsideProducto = productoInput && (productoInput === event.target || productoInput.contains(event.target));

                    const clickedInsideListGroup = event.target.closest('.list-group');

                    if (!clickedInsideCliente && !clickedInsideListGroup && this.clienteBusqueda.length > 0) {
                        this.clienteBusqueda = '';
                        this.clientes = [];
                    }

                    if (!clickedInsideProducto && !clickedInsideListGroup && this.productoBusqueda.length > 0) {
                        this.productoBusqueda = '';
                        this.productos = [];
                    }
                },
                buscarClientes() {
                    if (this.clienteBusqueda.length < 2) {
                        this.clientes = [];
                        return;
                    }
                    axios.get('/api/clientes/buscar?query=' + this.clienteBusqueda)
                        .then(r => this.clientes = r.data);
                },
                seleccionarCliente(cliente) {
                    this.clienteSeleccionado = cliente;
                    this.clienteBusqueda = cliente.nombreCompleto;
                    this.clientes = [];
                },
                seleccionarClienteDesdeModal(cliente) {
                    this.seleccionarCliente(cliente);
                    $('#modalClientes').modal('hide');
                },
                buscarProductos() {
                    if (this.productoBusqueda.length < 2) {
                        this.productos = [];
                        return;
                    }
                    axios.get('/api/productos/buscar?query=' + this.productoBusqueda)
                        .then(r => this.productos = r.data);
                },
                listarTodosLosProductos() {
                    let url = '/api/productos/buscar?query=';
                    if (this.rubroSeleccionado)
                        url += '&rubroId=' + this.rubroSeleccionado;

                    axios.get(url)
                        .then(r => this.productos = r.data)
                        .catch(e => console.error("Error al listar productos:", e));
                },
                abrirModalProductos() {
                    axios.get('/api/productos/buscar?query=')
                        .then(r => {
                            this.productos = r.data;
                            $('#modalProductos').modal('show');
                        });
                },
                abrirModalClientes() {
                    axios.get('/api/clientes/buscar?query=')
                        .then(r => {
                            this.clientes = r.data;
                            $('#modalClientes').modal('show');
                        });
                },
                agregarProducto(producto) {
                    const existente = this.carrito.find(p => p.productoId === producto.productoId);
                    if (existente) {
                        if (existente.cantidad < producto.stock) existente.cantidad++;
                    } else {
                        this.carrito.push({ ...producto, cantidad: 1 });
                    }
                    this.actualizarTotal();
                },
                quitarProducto(index) {
                    this.carrito.splice(index, 1);
                    this.actualizarTotal();
                },
                actualizarTotal() {
                    this.total = this.carrito.reduce((suma, p) => suma + p.precioVenta * p.cantidad, 0);
                },
                confirmarVenta() {
                    if (!this.clienteSeleccionado || this.carrito.length === 0) {
                        alert("Seleccione un cliente y al menos un producto.");
                        return;
                    }
                    if (!this.tipoVenta) {
                        alert("Debe seleccionar un tipo de venta.");
                        return;
                    }

                    const venta = {
                        clienteId: this.clienteSeleccionado.clienteId,
                        usuarioId: this.usuarioId,
                        total: this.total,
                        tipoVenta: this.tipoVenta,
                        productos: this.carrito.map(p => ({
                            productoId: p.productoId,
                            cantidad: p.cantidad,
                            precioUnitario: p.precioVenta
                        }))
                    };

                    axios.post('/api/ventas/crear', venta)
                        .then(r => {
                            this.ventaIdGenerada = r.data.ventaId;
                            this.ventaConfirmada = true;
                        })
                        .catch(e => {
                            alert("Error al registrar la venta.");
                            console.error(e);
                        });
                },
                resetearFormulario() {
                    this.clienteBusqueda = '';
                    this.clientes = [];
                    this.clienteSeleccionado = null;
                    this.productoBusqueda = '';
                    this.productos = [];
                    this.carrito = [];
                    this.total = 0;
                    this.tipoVenta = '';
                    this.rubroSeleccionado = '';
                    this.ventaConfirmada = false;
                    this.ventaIdGenerada = 0;
                },
                cargarRubros() {
                    axios.get('/Rubro/GetRubros')
                        .then(r => this.rubros = r.data)
                        .catch(e => {
                            console.error('Error al cargar rubros:', e);
                            this.rubros = [];
                        });
                },
                filtrarProductosPorRubro() {
                    if (!this.rubroSeleccionado) return;
                    axios.get('/api/productos/porrubro/' + this.rubroSeleccionado)
                        .then(r => this.productos = r.data)
                        .catch(e => {
                            console.error('Error al filtrar productos por rubro:', e);
                            this.productos = [];
                        });
                },
                irADetalleVenta() {
                    window.location.href = '/Venta/DetalleVue/' + this.ventaIdGenerada;
                }
            }
        });
    </script>
}
