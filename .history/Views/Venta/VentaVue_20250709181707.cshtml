@{
    ViewData["Title"] = "Nueva Venta (Vue)";
}

<h2 class="mb-4">üßæ Nueva Venta</h2>

<div id="app">
    <!-- Confirmaci√≥n de venta -->
    <div v-if="ventaConfirmada">
        <div class="alert alert-success">
            <h4 class="alert-heading">¬°Venta registrada exitosamente!</h4>
            <p>El n√∫mero de venta es <strong>#{{ ventaIdGenerada }}</strong>.</p>
            <hr>
            <button class="btn btn-primary" @@click="resetearFormulario">‚ûï Hacer otra venta</button>
            <button class="btn btn-info ml-2" @@click="irADetalleVenta">üîç Ver detalle de la venta</button>
        </div>
    </div>

    <!-- Formulario de venta -->
    <div v-else>
        <!-- Cliente -->
        <div class="form-group">
            <label><strong>Cliente</strong></label>
            <div class="input-group">
                <input type="text" class="form-control" v-model="clienteBusqueda" @@input="buscarClientes">
                <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#modalClientes">
                    üë§ Buscar
                </button>
            </div>
            <div v-if="clienteSeleccionado" class="mt-2">
                <strong>Seleccionado:</strong> {{ clienteSeleccionado.nombreCompleto }}
            </div>
        </div>

        <!-- Rubro y producto -->
        <div class="row">
            <div class="col-md-6">
                <label><strong>Filtrar por Rubro</strong></label>
                <select class="form-control" v-model="rubroSeleccionado" @@change="filtrarProductosPorRubro">
                    <option disabled value="">-- Seleccione un rubro --</option>
                    <option v-for="r in rubros" :value="r.rubroId">{{ r.nombre }}</option>
                </select>
            </div>
            <div class="col-md-6">
                <label><strong>Producto</strong></label>
                <div class="input-group">
                    <input type="text" class="form-control" v-model="productoBusqueda" @@input="buscarProductos">
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="modal" data-bs-target="#modalProductos">
                        üõí Buscar
                    </button>
                </div>
            </div>
        </div>

        <!-- Carrito -->
        <div class="mt-4">
            <h4>üß∫ Carrito</h4>
            <table class="table table-bordered" v-if="carrito.length">
                <thead class="table-dark">
                    <tr>
                        <th>Producto</th>
                        <th>Precio</th>
                        <th>Cantidad</th>
                        <th>Subtotal</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(item, index) in carrito">
                        <td>{{ item.nombre }}</td>
                        <td>${{ item.precioVenta.toFixed(2) }}</td>
                        <td><input type="number" class="form-control" v-model.number="item.cantidad" min="1" :max="item.stock" @@change="actualizarTotal"></td>
                        <td>${{ (item.precioVenta * item.cantidad).toFixed(2) }}</td>
                        <td><button class="btn btn-danger btn-sm" @@click="quitarProducto(index)">üóë</button></td>
                    </tr>
                </tbody>
            </table>

            <div v-if="carrito.length">
                <h4 class="text-success">Total: ${{ total.toFixed(2) }}</h4>
                <button class="btn btn-success btn-lg mt-2" @@click="confirmarVenta">üíæ Confirmar Venta</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Clientes -->
<div class="modal fade" id="modalClientes" tabindex="-1" aria-labelledby="modalClientesLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalClientesLabel">Seleccionar Cliente</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <ul class="list-group">
            <li class="list-group-item" v-for="c in clientes" @@click="seleccionarCliente(c); cerrarModal('modalClientes')" style="cursor: pointer">
                {{ c.nombreCompleto }}
            </li>
        </ul>
      </div>
    </div>
  </div>
</div>

<!-- Modal Productos -->
<div class="modal fade" id="modalProductos" tabindex="-1" aria-labelledby="modalProductosLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalProductosLabel">Seleccionar Producto</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <ul class="list-group">
            <li class="list-group-item d-flex justify-content-between align-items-center"
                v-for="p in productos" @@click="agregarProducto(p); cerrarModal('modalProductos')" style="cursor:pointer">
                {{ p.nombre }} - ${{ p.precioVenta }} (Stock: {{ p.stock }})
                <button class="btn btn-sm btn-primary">Agregar</button>
            </li>
        </ul>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        new Vue({
            el: '#app',
            data: {
                clienteBusqueda: '',
                clientes: [],
                clienteSeleccionado: null,
                productoBusqueda: '',
                productos: [],
                carrito: [],
                total: 0,
                usuarioId: 1,
                rubros: [],
                rubroSeleccionado: '',
                ventaConfirmada: false,
                ventaIdGenerada: 0
            },
            created() {
                this.cargarRubros();
                this.listarTodosLosClientes();
                this.listarTodosLosProductos();
            },
            methods: {
                buscarClientes() {
                    if (this.clienteBusqueda.length < 2) {
                        this.clientes = [];
                        return;
                    }
                    axios.get('/api/clientes/buscar?query=' + this.clienteBusqueda)
                        .then(r => this.clientes = r.data);
                },
                listarTodosLosClientes() {
                    axios.get('/api/clientes/buscar?query=')
                        .then(r => this.clientes = r.data);
                },
                seleccionarCliente(cliente) {
                    this.clienteSeleccionado = cliente;
                    this.clienteBusqueda = cliente.nombreCompleto;
                    this.clientes = [];
                },
                buscarProductos() {
                    if (this.productoBusqueda.length < 2) {
                        this.productos = [];
                        return;
                    }
                    axios.get('/api/productos/buscar?query=' + this.productoBusqueda)
                        .then(r => this.productos = r.data);
                },
                listarTodosLosProductos() {
                    let url = '/api/productos/buscar?query=';
                    if (this.rubroSeleccionado)
                        url += '&rubroId=' + this.rubroSeleccionado;

                    axios.get(url)
                        .then(r => this.productos = r.data);
                },
                agregarProducto(producto) {
                    const existente = this.carrito.find(p => p.productoId === producto.productoId);
                    if (existente) {
                        if (existente.cantidad < producto.stock) existente.cantidad++;
                    } else {
                        this.carrito.push({ ...producto, cantidad: 1 });
                    }
                    this.actualizarTotal();
                },
                quitarProducto(index) {
                    this.carrito.splice(index, 1);
                    this.actualizarTotal();
                },
                actualizarTotal() {
                    this.total = this.carrito.reduce((suma, p) => suma + p.precioVenta * p.cantidad, 0);
                },
                confirmarVenta() {
                    if (!this.clienteSeleccionado || this.carrito.length === 0) {
                        alert("Seleccione un cliente y al menos un producto.");
                        return;
                    }

                    const venta = {
                        clienteId: this.clienteSeleccionado.clienteId,
                        usuarioId: this.usuarioId,
                        total: this.total,
                        productos: this.carrito.map(p => ({
                            productoId: p.productoId,
                            cantidad: p.cantidad,
                            precioUnitario: p.precioVenta
                        }))
                    };

                    axios.post('/api/ventas/crear', venta)
                        .then(r => {
                            this.ventaIdGenerada = r.data.ventaId;
                            this.ventaConfirmada = true;
                        })
                        .catch(e => {
                            alert("Error al registrar la venta.");
                            console.error(e);
                        });
                },
                resetearFormulario() {
                    this.clienteBusqueda = '';
                    this.clientes = [];
                    this.clienteSeleccionado = null;
                    this.productoBusqueda = '';
                    this.productos = [];
                    this.carrito = [];
                    this.total = 0;
                    this.rubroSeleccionado = '';
                    this.ventaConfirmada = false;
                    this.ventaIdGenerada = 0;
                },
                cargarRubros() {
                    axios.get('/Rubro/GetRubros')
                        .then(r => this.rubros = r.data);
                },
                filtrarProductosPorRubro() {
                    if (!this.rubroSeleccionado) return;
                    axios.get('/api/productos/porrubro/' + this.rubroSeleccionado)
                        .then(r => this.productos = r.data);
                },
                irADetalleVenta() {
                    window.location.href = '/Venta/DetalleVue/' + this.ventaIdGenerada;
                },
                cerrarModal(id) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById(id));
                    if (modal) modal.hide();
                }
            }
        });
    </script>
}
