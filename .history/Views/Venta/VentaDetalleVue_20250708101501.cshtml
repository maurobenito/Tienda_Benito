@{
    ViewData["Title"] = "Detalle de Venta (Vue)";
}

<h2 class="mb-4">üßæ Detalle de Venta</h2>

<!-- üîò Botones de acci√≥n -->
<div class="mb-3 d-flex gap-2 flex-wrap">
    <button class="btn btn-secondary" onclick="window.print()">üñ® Imprimir</button>
    <button class="btn btn-danger" onclick="exportarPDF()">üìÑ Exportar PDF</button>
    <button class="btn btn-success" onclick="exportarExcel()">üìä Exportar Excel</button>
</div>

<!-- üì¶ Contenedor principal -->
<div id="app">
    <div v-if="venta" id="detalleVenta" class="border rounded p-4 shadow-sm bg-light">
        <!-- Informaci√≥n general -->
        <div class="mb-4">
            <h5 class="text-primary">üßç Informaci√≥n de la Venta</h5>
            <div class="row">
                <div class="col-md-6">
                    <p><strong>ID Venta:</strong> {{ venta.ventaId }}</p>
                    <p><strong>Cliente:</strong> {{ venta.cliente }}</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Vendedor:</strong> {{ venta.usuario }}</p>
                    <p><strong>Fecha:</strong> {{ venta.fecha }}</p>
                </div>
            </div>
            <h5 class="text-right text-success">Total: ${{ venta.total.toFixed(2) }}</h5>
        </div>

        <!-- Tabla de productos -->
        <h5 class="text-primary">üõí Productos Vendidos</h5>
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-sm bg-white">
                <thead class="thead-dark">
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio Unitario</th>
                        <th>Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="detalle in venta.detalles">
                        <td>{{ detalle.nombre }}</td>
                        <td>{{ detalle.cantidad }}</td>
                        <td>${{ detalle.precioUnitario.toFixed(2) }}</td>
                        <td>${{ detalle.subtotal.toFixed(2) }}</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div v-else>
        <div class="alert alert-info">‚è≥ Cargando detalles de la venta...</div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

    <script>
        new Vue({
            el: '#app',
            data: {
                venta: null
            },
            created() {
                const id = window.location.pathname.split('/').pop();
                axios.get(`/api/ventas/${id}`)
                    .then(resp => {
                        this.venta = resp.data;
                    })
                    .catch(error => {
                        console.error("Error cargando venta:", error);
                        alert("No se pudo cargar la venta.");
                    });
            }
        });

        // üìÑ Exportar a PDF
        async function exportarPDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            doc.setFontSize(16);
            doc.text("Detalle de Venta", 10, 10);

            let y = 20;
            const tabla = document.querySelector("#detalleVenta table");
            const rows = tabla.querySelectorAll("tr");

            rows.forEach(row => {
                const cols = Array.from(row.cells).map(td => td.innerText).join(" | ");
                doc.setFontSize(10);
                doc.text(cols, 10, y);
                y += 8;
            });

            doc.save("detalle_venta.pdf");
        }

        // üìä Exportar a Excel
        function exportarExcel() {
            const tabla = document.querySelector("#detalleVenta table");
            const wb = XLSX.utils.table_to_book(tabla, { sheet: "Detalle Venta" });
            XLSX.writeFile(wb, "detalle_venta.xlsx");
        }
    </script>
}
