@{
    ViewData["Title"] = "Nueva Venta (Vue)";
}

<h2>Nueva Venta</h2>

<div id="app">
    <!-- Confirmaci√≥n de venta -->
    <div v-if="ventaConfirmada">
        <div class="alert alert-success">
            <h4 class="alert-heading">¬°Venta registrada exitosamente!</h4>
            <p>El n√∫mero de venta es <strong>#{{ ventaIdGenerada }}</strong>.</p>
            <hr>
            <button class="btn btn-primary" @@click="resetearFormulario">Hacer otra venta</button>
            <button class="btn btn-info ml-2" @@click="irADetalleVenta">Ver detalle de la venta</button>
        </div>
    </div>

    <!-- Formulario de venta -->
    <div v-else>
            <!-- Cliente -->
        <div class="form-group">
            <label><strong>Buscar Cliente</strong></label>
            <div class="input-group">
                <input type="text" class="form-control" v-model="clienteBusqueda" @@input="buscarClientes">
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" @@click="abrirModalClientes">üëÅ Navegar Clientes</button>
                </div>
            </div>
            <ul class="list-group" v-if="clientes.length">
                <li class="list-group-item" v-for="c in clientes" @@click="seleccionarCliente(c)">
                    {{ c.nombreCompleto }}
                </li>
            </ul>
            <div v-if="clienteSeleccionado">
                <strong>Cliente Seleccionado:</strong> {{ clienteSeleccionado.nombreCompleto }}
            </div>
        </div>

        <!-- Rubro y producto -->
        <div class="row">
            <div class="col-md-6">
                <label><strong>Buscar Producto</strong></label>
                <div class="input-group">
                    <input type="text" class="form-control" v-model="productoBusqueda" @@input="buscarProductos">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" @@click="abrirModalProductos">üëÅ Navegar Productos</button>
                    </div>
                </div>
            </div>
        </div>
    
        <!-- Lista r√°pida -->
        <ul class="list-group mt-2" v-if="productos.length && productoBusqueda.length > 1">
            <li class="list-group-item d-flex justify-content-between align-items-center"
                v-for="p in productos" @@click="agregarProducto(p)">
                {{ p.nombre }} - ${{ p.precioVenta }} (Stock: {{ p.stock }})
                <button class="btn btn-sm btn-primary">Agregar</button>
            </li>
        </ul>
        <!-- ALERTA STOCK BAJO -->
        <div v-if="productosStockBajo.length" class="alert alert-warning mt-3">
            ‚ö†Ô∏è Atenci√≥n: Los siguientes productos tienen <strong>stock bajo</strong>:
            <ul>
                <li v-for="p in productosStockBajo" :key="p.productoId">
                    {{ p.nombre }} (Stock: {{ p.stock }})
                </li>
            </ul>
        </div>
        <!-- Carrito -->
        <div class="mt-4">
            <h4>Carrito</h4>
            <div class="form-group mt-3">
                <label><strong>Tipo de Venta</strong></label>
                <select class="form-control" v-model="tipoVenta">
                    <option disabled value="">-- Seleccione un tipo --</option>
                    <option value="Contado">Contado</option>
                    <option value="Tarjeta D√©bito">Tarjeta D√©bito</option>
                    <option value="Tarjeta Cr√©dito">Tarjeta Cr√©dito</option>
                    <option value="Transferencia">Transferencia</option>
                </select>
            </div>

            <table class="table table-bordered" v-if="carrito.length">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Precio Unitario</th>
                        <th>Cantidad</th>
                        <th>Subtotal</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(item, index) in carrito" :key="item.productoId">
                        <td>{{ item.nombre }}</td>
                        <td>${{ item.precioVenta.toFixed(2) }}</td>
                        <td>
                            <input type="number" class="form-control" v-model.number="item.cantidad"
                                :min="1" :max="item.stock" @@change="actualizarTotal">
                        </td>
                        <td>${{ (item.precioVenta * item.cantidad).toFixed(2) }}</td>
                        <td><button class="btn btn-danger btn-sm" @@click="quitarProducto(index)">Quitar</button></td>
                    </tr>
                </tbody>
            </table>

            <div v-if="carrito.length">
                <h4>Total: ${{ total.toFixed(2) }}</h4>
                <button class="btn btn-success" @@click="confirmarVenta">Confirmar Venta</button>
            </div>
        </div>
    </div>

    <!-- Modal Productos Mejorado -->
    <div class="modal fade" id="modalProductos" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Seleccionar Producto</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="text" class="form-control mb-3" placeholder="Buscar producto..." v-model="filtroModalNombre">
                    <table class="table table-sm table-striped">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Rubro</th>
                                <th>Precio</th>
                                <th>Stock</th>
                                <th>Cantidad</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="p in productosModalFiltrados" :key="p.productoId"
                            :class="{ 'table-danger': p.stock < 10 }">

                                <td>{{ p.nombre }}</td>
                                <td>{{ p.rubroNombre }}</td>
                                <td>${{ p.precioVenta.toFixed(2) }}</td>
                                <td>{{ p.stock }}</td>
                                <td><input type="number" class="form-control" v-model.number="p.cantidadTemp" :min="1" :max="p.stock"></td>
                                <td><button class="btn btn-success btn-sm" @@click="agregarProductoDesdeModal(p)">Agregar</button></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal Clientes -->
<div class="modal fade" id="modalClientes" tabindex="-1" role="dialog" aria-labelledby="modalClientesLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Seleccionar Cliente</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label><strong>Buscar Cliente</strong></label>
                <div class="input-group mb-3">
                    <input type="text" class="form-control" v-model="clienteBusqueda" @@input="buscarClientes">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button" @@click="buscarClientes">Buscar</button>
                    </div>
                </div>

                <ul class="list-group" v-if="clientes.length">
                    <li class="list-group-item" v-for="c in clientes" :key="c.clienteId" @@click="seleccionarClienteDesdeModal(c)">
                        {{ c.nombreCompleto }}
                    </li>
                </ul>
                <div v-else class="text-muted text-center">No se encontraron clientes.</div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        new Vue({
            el: '#app',
            data: {
                clienteBusqueda: '',
                clientes: [],
                clienteSeleccionado: null,
                clienteBusquedaModal: '',
                clientesModal: [],
                productoBusqueda: '',
                productos: [],
                carrito: [],
                total: 0,
                tipoVenta: '',
                usuarioId: 1,
                rubros: [],
                rubroSeleccionado: '',
                ventaConfirmada: false,
                ventaIdGenerada: 0,
                filtroModalNombre: ''
            },
            computed: {
                productosStockBajo() {
                    return this.carrito.filter(p => p.stock < 10);
                },
                productosModalFiltrados() {
                    return this.productos
                        .filter(p => p.nombre.toLowerCase().includes(this.filtroModalNombre.toLowerCase()))
                        .sort((a, b) => a.nombre.localeCompare(b.nombre));
                }
            },
            methods: {
                buscarClientes() {
                    axios.get('/api/clientes/buscar?query=' + this.clienteBusqueda)
                        .then(r => this.clientes = r.data);
                },
                seleccionarCliente(c) {
                    this.clienteSeleccionado = c;
                    this.clienteBusqueda = c.nombreCompleto;
                    this.clientes = [];
                },
               abrirModalClientes() {
                    this.clienteBusquedaModal = '';
                    this.clientesModal = [];
                    $('#modalClientes').modal('show');
        },

                
                buscarProductos() {
                    axios.get('/api/productos/buscar?query=' + this.productoBusqueda)
                        .then(r => this.productos = r.data);
                },
                abrirModalProductos() {
                    axios.get('/api/productos/buscar?query=')
                        .then(r => {
                            this.productos = r.data.map(p => ({ ...p, cantidadTemp: 1 }));
                            $('#modalProductos').modal('show');
                        });
                },
                agregarProducto(p) {
                    const existente = this.carrito.find(item => item.productoId === p.productoId);
                    if (existente) {
                        if (existente.cantidad < p.stock) existente.cantidad++;
                    } else {
                        this.carrito.push({ ...p, cantidad: 1 });
                    }
                    this.actualizarTotal();
                },
                agregarProductoDesdeModal(p) {
                    const existente = this.carrito.find(item => item.productoId === p.productoId);
                    if (existente) {
                        const nuevaCantidad = existente.cantidad + p.cantidadTemp;
                        existente.cantidad = nuevaCantidad <= p.stock ? nuevaCantidad : p.stock;
                    } else {
                        this.carrito.push({ ...p, cantidad: p.cantidadTemp });
                    }
                    this.actualizarTotal();
                },
                quitarProducto(i) {
                    this.carrito.splice(i, 1);
                    this.actualizarTotal();
                },
                actualizarTotal() {
                    this.total = this.carrito.reduce((acc, p) => acc + p.precioVenta * p.cantidad, 0);
                },
                confirmarVenta() {
                    if (!this.clienteSeleccionado || !this.tipoVenta || !this.carrito.length) {
                        alert('Complete cliente, tipo de venta y al menos un producto.');
                        return;
                    }
                    const venta = {
                        clienteId: this.clienteSeleccionado.clienteId,
                        usuarioId: this.usuarioId,
                        tipoVenta: this.tipoVenta,
                        total: this.total,
                        productos: this.carrito.map(p => ({
                            productoId: p.productoId,
                            cantidad: p.cantidad,
                            precioUnitario: p.precioVenta
                        }))
                    };
                    axios.post('/api/ventas/crear', venta)
                        .then(r => {
                            this.ventaIdGenerada = r.data.ventaId;
                            this.ventaConfirmada = true;
                        })
                        .catch(() => alert('Error al registrar la venta.'));
                },
                resetearFormulario() {
                    location.reload();
                },
                irADetalleVenta() {
                    window.location.href = '/Venta/DetalleVue/' + this.ventaIdGenerada;
                },
                cargarRubros() {
                    axios.get('/Rubro/GetRubros')
                        .then(r => this.rubros = r.data);
                },
                filtrarProductosPorRubro() {
                    axios.get('/api/productos/porrubro/' + this.rubroSeleccionado)
                        .then(r => this.productos = r.data);
                }
            },
            created() {
                this.cargarRubros();
            }
        });
    </script>
}