@model IEnumerable<Tienda_Benito.Models.Producto>

@{
    ViewData["Title"] = "Lista de Productos";
    var nombreFiltro = ViewBag.NombreFiltro as string ?? "";
    var rubroFiltro = ViewBag.RubroFiltro as string ?? "";
    var proveedorFiltro = ViewBag.ProveedorFiltro as string ?? "";
    var ordenActual = ViewBag.OrdenActual as string ?? "";
    var paginaActual = ViewBag.PaginaActual as int? ?? 1;
    var tamanoPagina = ViewBag.TamanoPagina as int? ?? 5;
    var totalPaginas = ViewBag.TotalPaginas as int? ?? 1;
    var rubros = ViewBag.Rubros as List<SelectListItem>;
    var proveedores = ViewBag.Proveedores as List<SelectListItem>;

    string OrdenLink(string campo)
    {
        return ordenActual == campo ? campo + "_desc" :
               ordenActual == campo + "_desc" ? campo : campo;
    }
}

<h1 class="mb-4">üì¶ Productos</h1>

<p>
    <a asp-action="Create" class="btn btn-success mb-3">‚ûï Crear Nuevo Producto</a>
</p>

<form method="get" class="mb-3">
    <div class="form-row">
        <div class="col">
            <input name="nombre" value="@nombreFiltro" class="form-control" placeholder="üîç Filtrar por nombre" />
        </div>
        <div class="col">
            <select name="rubro" class="form-control">
                <option value="">üìÅ Filtrar por rubro</option>
                @foreach (var r in rubros)
                {
                    <option value="@r.Value" selected="@(r.Value == rubroFiltro)">
                        @r.Text
                    </option>
                }
            </select>
        </div>
        <div class="col">
            <select name="proveedor" class="form-control">
                <option value="">üöö Filtrar por proveedor</option>
                @foreach (var p in proveedores)
                {
                    <option value="@p.Value" selected="@(p.Value == proveedorFiltro)">
                        @p.Text
                    </option>
                }
            </select>
        </div>
      <div class="col-auto">
    <select name="tamPagina" class="form-control">
        <option value="5" selected="@(tamanoPagina == 5)">5 por p√°gina</option>
        <option value="10" selected="@(tamanoPagina == 10)">10 por p√°gina</option>
        <option value="15" selected="@(tamanoPagina == 15)">15 por p√°gina</option>
    </select>
</div>

        <div class="col-auto">
            <button type="submit" class="btn btn-primary">Filtrar</button>
        </div>
    </div>
</form>

<table class="table table-hover table-bordered table-striped shadow-sm">
<thead class="thead-dark text-center">
    <tr>
        <th>
            <a class="text-dark text-decoration-none d-inline-block cursor-pointer"
               asp-action="Index"
               asp-route-orden="@OrdenLink("nombre")"
               asp-route-nombre="@nombreFiltro"
               asp-route-rubro="@rubroFiltro"
               asp-route-proveedor="@proveedorFiltro"
               asp-route-tamPagina="@tamanoPagina">
                Nombre
                @if (ordenActual.Contains("nombre"))
                {
                    <i class="bi @(ordenActual.EndsWith("_desc") ? "bi-caret-down-fill" : "bi-caret-up-fill")"></i>
                }
            </a>
        </th>
        <th>Descripci√≥n</th>
        <th>
            <a class="text-dark text-decoration-none d-inline-block cursor-pointer"
               asp-action="Index"
               asp-route-orden="@OrdenLink("precioCosto")"
               asp-route-nombre="@nombreFiltro"
               asp-route-rubro="@rubroFiltro"
               asp-route-proveedor="@proveedorFiltro"
               asp-route-tamPagina="@tamanoPagina">
                Precio Costo
                @if (ordenActual.Contains("precioCosto"))
                {
                    <i class="bi @(ordenActual.EndsWith("_desc") ? "bi-caret-down-fill" : "bi-caret-up-fill")"></i>
                }
            </a>
        </th>
        <th>
            <a class="text-dark text-decoration-none d-inline-block cursor-pointer"
               asp-action="Index"
               asp-route-orden="@OrdenLink("precioVenta")"
               asp-route-nombre="@nombreFiltro"
               asp-route-rubro="@rubroFiltro"
               asp-route-proveedor="@proveedorFiltro"
               asp-route-tamPagina="@tamanoPagina">
                Precio Venta
                @if (ordenActual.Contains("precioVenta"))
                {
                    <i class="bi @(ordenActual.EndsWith("_desc") ? "bi-caret-down-fill" : "bi-caret-up-fill")"></i>
                }
            </a>
        </th>
        <th>Unidad</th>
        <th>
            <a class="text-dark text-decoration-none d-inline-block cursor-pointer"
               asp-action="Index"
               asp-route-orden="@OrdenLink("rubro")"
               asp-route-nombre="@nombreFiltro"
               asp-route-rubro="@rubroFiltro"
               asp-route-proveedor="@proveedorFiltro"
               asp-route-tamPagina="@tamanoPagina">
                Rubro
                @if (ordenActual.Contains("rubro"))
                {
                    <i class="bi @(ordenActual.EndsWith("_desc") ? "bi-caret-down-fill" : "bi-caret-up-fill")"></i>
                }
            </a>
        </th>
        <th>
            <a class="text-dark text-decoration-none d-inline-block cursor-pointer"
               asp-action="Index"
               asp-route-orden="@OrdenLink("proveedor")"
               asp-route-nombre="@nombreFiltro"
               asp-route-rubro="@rubroFiltro"
               asp-route-proveedor="@proveedorFiltro"
               asp-route-tamPagina="@tamanoPagina">
                Proveedor
                @if (ordenActual.Contains("proveedor"))
                {
                    <i class="bi @(ordenActual.EndsWith("_desc") ? "bi-caret-down-fill" : "bi-caret-up-fill")"></i>
                }
            </a>
        </th>
        <th>Stock</th>
        <th>Acciones</th>
    </tr>
</thead>


    <tbody>
        @foreach (var item in Model)
{
    var claseFila = item.Stock < 10 ? "table-danger" : "";

    <tr class="@claseFila">
        <td>@item.Nombre</td>
        <td>@item.Descripcion</td>
        <td class="text-right">@item.PrecioCosto.ToString("C")</td>
        <td class="text-right">@item.PrecioVenta.ToString("C")</td>
        <td class="text-capitalize">@item.UnidadMedida</td>
        <td>@item.Rubro?.Nombre</td>
        <td>@item.Proveedor?.Nombre</td>
        <td class="text-center">@item.Stock</td>
        <td class="text-nowrap">
            <a asp-action="Edit" asp-route-id="@item.ProductoId" class="btn btn-sm btn-warning mr-1">‚úèÔ∏è</a>
            <a asp-action="Details" asp-route-id="@item.ProductoId" class="btn btn-sm btn-info mr-1">üîç</a>
            <a asp-action="Delete" asp-route-id="@item.ProductoId" class="btn btn-sm btn-danger">üóëÔ∏è</a>
        </td>
    </tr>
}
    </tbody>
</table>

@if (totalPaginas > 1)
{
    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item @(paginaActual == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pagina = 1, tamPagina = tamanoPagina, nombre = nombreFiltro, rubro = rubroFiltro, proveedor = proveedorFiltro, orden = ordenActual })">¬´</a>
            </li>
            <li class="page-item @(paginaActual == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pagina = paginaActual - 1, tamPagina = tamanoPagina, nombre = nombreFiltro, rubro = rubroFiltro, proveedor = proveedorFiltro, orden = ordenActual })">‚Äπ</a>
            </li>
            @for (int i = Math.Max(1, paginaActual - 2); i <= Math.Min(totalPaginas, paginaActual + 2); i++)
            {
                <li class="page-item @(i == paginaActual ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pagina = i, tamPagina = tamanoPagina, nombre = nombreFiltro, rubro = rubroFiltro, proveedor = proveedorFiltro, orden = ordenActual })">@i</a>
                </li>
            }
            <li class="page-item @(paginaActual == totalPaginas ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pagina = paginaActual + 1, tamPagina = tamanoPagina, nombre = nombreFiltro, rubro = rubroFiltro, proveedor = proveedorFiltro, orden = ordenActual })">‚Ä∫</a>
            </li>
            <li class="page-item @(paginaActual == totalPaginas ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pagina = totalPaginas, tamPagina = tamanoPagina, nombre = nombreFiltro, rubro = rubroFiltro, proveedor = proveedorFiltro, orden = ordenActual })">¬ª</a>
            </li>
        </ul>
    </nav>
}
